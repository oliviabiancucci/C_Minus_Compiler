The abstract syntax tree is:
FunctionDec: add1
    NameTy: INT
    SimpleDec: x
        NameTy: INT
    NilExp
FunctionDec: sub2
    NameTy: INT
    SimpleDec: x
        NameTy: INT
    NilExp
FunctionDec: add1
    NameTy: INT
    SimpleDec: x
        NameTy: INT
    CompoundExp:
        IfExp:
            OpExp: > 
                VarExp: 
                    SimpleVar: x
                IntExp: 5
            CompoundExp:
                ReturnExp:
                    CallExp: sub2
                        OpExp: + 
                            VarExp: 
                                SimpleVar: x
                            IntExp: 1
        ElseExp:
            CompoundExp:
                ReturnExp:
                    VarExp: 
                        SimpleVar: x
FunctionDec: sub2
    NameTy: INT
    SimpleDec: x
        NameTy: INT
    CompoundExp:
        IfExp:
            OpExp: > 
                VarExp: 
                    SimpleVar: x
                IntExp: 5
            CompoundExp:
                ReturnExp:
                    CallExp: add1
                        OpExp: - 
                            VarExp: 
                                SimpleVar: x
                            IntExp: 2
        ElseExp:
            CompoundExp:
                ReturnExp:
                    VarExp: 
                        SimpleVar: x
FunctionDec: main
    NameTy: VOID
    CompoundExp:
        VarDecList
            SimpleDec: x
                NameTy: INT
        AssignExp:
            VarExp: 
                SimpleVar: x
            IntExp: 8
        CallExp: output
            CallExp: add1
                VarExp: 
                    SimpleVar: x
