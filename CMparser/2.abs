The abstract syntax tree is:
FunctionDec: add
    NameTy: INT
    SimpleDec: x
        NameTy: INT
    SimpleDec: y
        NameTy: INT
    CompoundExp:
        ReturnExp:
            OpExp: + 
                VarExp: 
                    SimpleVar: x
                VarExp: 
                    SimpleVar: y
FunctionDec: main
    NameTy: INT
    CompoundExp:
        VarDecList
            SimpleDec: x
                NameTy: INT
        VarDecList
            SimpleDec: y
                NameTy: INT
        VarDecList
            SimpleDec: fac
                NameTy: INT
        VarDecList
            SimpleDec: z
                NameTy: BOOL
        AssignExp:
            VarExp: 
                SimpleVar: fac
            OpExp: - 
                NilExp
                IntExp: 2
        AssignExp:
            VarExp: 
                SimpleVar: y
            IntExp: 7
        AssignExp:
            VarExp: 
                SimpleVar: x
            CallExp: add
                VarExp: 
                    SimpleVar: fac
                VarExp: 
                    SimpleVar: y
        AssignExp:
            VarExp: 
                SimpleVar: z
            BoolExp: true
        CallExp: output
            VarExp: 
                SimpleVar: fac
        IfExp:
            OpExp: < 
                VarExp: 
                    SimpleVar: fac
                IntExp: 0
            CompoundExp:
                IfExp:
                    OpExp: > 
                        VarExp: 
                            SimpleVar: y
                        IntExp: 0
                    CompoundExp:
                        AssignExp:
                            VarExp: 
                                SimpleVar: fac
                            IntExp: 420
        ElseExp:
            CompoundExp:
                AssignExp:
                    VarExp: 
                        SimpleVar: fac
                    IntExp: 69
        CallExp: output
            VarExp: 
                SimpleVar: fac
